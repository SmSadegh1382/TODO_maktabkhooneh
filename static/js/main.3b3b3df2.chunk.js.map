{"version":3,"sources":["ducks/visibilityFilter.js","constants/TodoFilters.js","ducks/todos.js","store.js","components/TodoTextInput.js","components/Header.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","components/TodoItem.js","components/TodoList.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","index.js"],"names":["visibilityFilter","createSlice","slice","initialState","reducers","setVisibilityFilter","state","action","payload","getVisibilityFilter","selectors","todos","add","concat","Object","toConsumableArray","id","reduce","maxId","todo","Math","max","completed","text","delete","filter","edit","map","objectSpread","complete","completeAll","areAllMarked","every","clearCompleted","getVisibleTodos","createSelector","getTodos","t","Error","getCompletedTodoCount","count","reducer","combineReducers","middleware","getDefaultMiddleware","store","configureStore","devTools","process","preloadedState","TodoTextInput","_this","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","react_default","a","createElement","className","classnames","this","editing","new-todo","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Component","Header","_ref","TodoTextInput_TodoTextInput","length","connect","actions","Link","active","children","setFilter","selected","style","cursor","onClick","ownProps","dispatch","FILTER_TITLES","_FILTER_TITLES","defineProperty","Footer","activeCount","completedCount","onClearCompleted","itemWord","keys","key","FilterLink","TodoItem","handleDoubleClick","handleSave","element","_this2","_this$props","deleteTodo","checked","onDoubleClick","TodoList","filteredTodos","TodoItem_TodoItem","assign","VisibleTodoList","bindActionCreators","MainSection","todosCount","readOnly","containers_VisibleTodoList","components_Footer","App","containers_Header","containers_MainSection","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3b3b3df2.chunk.js","sourcesContent":["import { createSlice } from \"redux-starter-kit\";\nimport { SHOW_ALL } from \"../constants/TodoFilters\";\n\nexport const visibilityFilter = createSlice({\n  slice: \"visibilityFilter\",\n  initialState: SHOW_ALL,\n  reducers: {\n    setVisibilityFilter: (state, action) => action.payload\n  }\n});\n","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import { createSlice, createSelector } from \"redux-starter-kit\";\nimport { visibilityFilter } from \"./visibilityFilter\";\nimport {\n  SHOW_ALL,\n  SHOW_COMPLETED,\n  SHOW_ACTIVE\n} from \"../constants/TodoFilters\";\n\nconst { getVisibilityFilter } = visibilityFilter.selectors;\n\nconst addTodo = (state, action) => [\n  ...state,\n  {\n    id: state.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n    completed: false,\n    text: action.payload.text\n  }\n];\n\nconst deleteTodo = (state, action) =>\n  state.filter(todo => todo.id !== action.payload.id);\n\nconst editTodo = (state, action) =>\n  state.map(todo =>\n    todo.id === action.payload.id\n      ? { ...todo, text: action.payload.text }\n      : todo\n  );\n\nconst completeTodo = (state, action) =>\n  state.map(todo =>\n    todo.id === action.payload.id\n      ? { ...todo, completed: !todo.completed }\n      : todo\n  );\nconst completeAllTodos = state => {\n  const areAllMarked = state.every(todo => todo.completed);\n  return state.map(todo => ({\n    ...todo,\n    completed: !areAllMarked\n  }));\n};\n\nconst clearCompleted = state => state.filter(todo => todo.completed === false);\n\nconst todos = createSlice({\n  slice: \"todos\",\n  initialState: [],\n  reducers: {\n    add: addTodo,\n    delete: deleteTodo,\n    edit: editTodo,\n    complete: completeTodo,\n    completeAll: completeAllTodos,\n    clearCompleted: clearCompleted\n  }\n});\n\ntodos.selectors.getVisibleTodos = createSelector(\n  [getVisibilityFilter, todos.selectors.getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos;\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed);\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed);\n      default:\n        throw new Error(\"Unknown filter: \" + visibilityFilter);\n    }\n  }\n);\n\ntodos.selectors.getCompletedTodoCount = createSelector(\n  [todos.selectors.getTodos],\n  todos =>\n    todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0)\n);\n\nexport { todos };\n","import { configureStore, getDefaultMiddleware } from \"redux-starter-kit\";\nimport { combineReducers } from \"redux\";\nimport { visibilityFilter, todos } from \"./ducks\";\n\nconst preloadedState = {\n  todos: [\n    {\n      text: \"Use Redux\",\n      completed: false,\n      id: 0\n    }\n  ]\n};\n\nconst reducer = combineReducers({\n  todos: todos.reducer,\n  visibilityFilter: visibilityFilter.reducer\n});\n\nconst middleware = [...getDefaultMiddleware()];\n\nexport const store = configureStore({\n  reducer,\n  middleware,\n  devTools: process.env.NODE_ENV !== \"production\",\n  preloadedState\n});\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nconst Header = ({ add }) => (\n  <header className=\"header\">\n    <h1>TODO APP</h1>\n    <TodoTextInput\n      newTodo\n      onSave={text => {\n        if (text.length !== 0) {\n          add({ text });\n        }\n      }}\n      placeholder=\"Enter your works\"\n    />\n  </header>\n);\n\nHeader.propTypes = {\n  add: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport { todos } from \"../ducks\";\n\nexport default connect(\n  null,\n  { add: todos.actions.add }\n)(Header);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from \"react-redux\";\nimport { visibilityFilter } from \"../ducks\";\nimport Link from \"../components/Link\";\n\nconst { setVisibilityFilter } = visibilityFilter.actions;\nconst { getVisibilityFilter } = visibilityFilter.selectors;\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === getVisibilityFilter(state)\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link);\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport TodoTextInput from \"./TodoTextInput\";\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    edit: PropTypes.func.isRequired,\n    delete: PropTypes.func.isRequired,\n    complete: PropTypes.func.isRequired\n  };\n\n  state = {\n    editing: false\n  };\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true });\n  };\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.delete({ id });\n    } else {\n      this.props.edit({ id, text });\n    }\n    this.setState({ editing: false });\n  };\n\n  render() {\n    const { todo, complete, delete: deleteTodo } = this.props;\n\n    let element;\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={text => this.handleSave(todo.id, text)}\n        />\n      );\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => complete({ id: todo.id })}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button\n            className=\"destroy\"\n            onClick={() => deleteTodo({ id: todo.id })}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <li\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    );\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, actions }) => (\n  <ul className=\"todo-list\">\n    {filteredTodos.map(todo =>\n      <TodoItem key={todo.id} todo={todo} {...actions} />\n    )}\n  </ul>\n)\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { todos } from \"../ducks\";\nimport TodoList from \"../components/TodoList\";\n\nconst mapStateToProps = state => ({\n  filteredTodos: todos.selectors.getVisibleTodos(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(todos.actions, dispatch)\n});\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);\n\nexport default VisibleTodoList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Footer from \"./Footer\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\n\nconst MainSection = ({ todosCount, completedCount, actions }) => (\n  <section className=\"main\">\n    {!!todosCount && (\n      <span>\n        <input\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          checked={completedCount === todosCount}\n          readOnly\n        />\n        <label onClick={actions.completeAll} />\n      </span>\n    )}\n    <VisibleTodoList />\n    {!!todosCount && (\n      <Footer\n        completedCount={completedCount}\n        activeCount={todosCount - completedCount}\n        onClearCompleted={actions.clearCompleted}\n      />\n    )}\n  </section>\n);\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n};\n\nexport default MainSection;\n","import { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport MainSection from \"../components/MainSection\";\nimport { todos } from \"../ducks\";\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: todos.selectors.getCompletedTodoCount(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(todos.actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection);\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\n\nconst App = () => (\n  <div>\n    <Header />\n    <MainSection />\n  </div>\n)\n\nexport default App\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./components/App\";\nimport \"todomvc-app-css/index.css\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}